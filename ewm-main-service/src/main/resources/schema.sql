CREATE TABLE IF NOT EXISTS users
(
    userId BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email  VARCHAR(254) NOT NULL UNIQUE,
    name   VARCHAR(250) NOT NULL
);

CREATE TABLE IF NOT EXISTS categories
(
    categoryId BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS events
(
    eventId            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         varchar(2000) NOT NULL,
    categoryId         BIGINT        NOT NULL references categories (categoryId),
    confirmed_requests int,
    created_on         timestamp     NOT NULL,
    published_on       timestamp,
    description        varchar(7000) NOT NULL,
    event_date         timestamp     NOT NULL,
    initiatorId        BIGINT        NOT NULL references users (userId),
    paid               BOOLEAN       NOT NULL,
    participant_limit  int,
    state              varchar(50)   NOT NULL,
    request_moderation BOOLEAN,
    title              varchar(120)  NOT NULL,
    lat                FLOAT         NOT NULL,
    lon                FLOAT         NOT NULL,
    views              BIGINT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS participation_requests
(
    requestId   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    eventId     BIGINT                      NOT NULL references events (eventId),
    requesterId BIGINT                      NOT NULL references users (userId),
    created     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    status      VARCHAR(50)                 NOT NULL,
    CONSTRAINT UQ_PARTICIPANT_PER_EVENT UNIQUE (requesterId, eventId)
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilationId BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned        BOOLEAN     NOT NULL,
    title         VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilationId BIGINT NOT NULL REFERENCES compilations (compilationId) ON DELETE CASCADE,
    eventId       BIGINT NOT NULL REFERENCES events (eventId) ON DELETE CASCADE,
    PRIMARY KEY (compilationId, eventId)
);

create table if not exists likes
(
    like_id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    entity_type varchar(50)                 NOT NULL,
    entity_id   BIGINT                      NOT NULL,
    val         BIGINT                      NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    user_id     BIGINT                      NOT NULL,
    message     varchar(7000),
    updated_at  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT user_like_per_entity UNIQUE (entity_id, entity_type, user_id)
);

create or replace view rating_likes as
SELECT row_number() OVER () AS "id",
       entity_type,
       entity_id,
       sum(val) AS total
FROM likes
GROUP BY entity_type, entity_id;



